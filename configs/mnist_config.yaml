mode: train
restore : False # restore from restore_dir

batch_size : 2
learning_rate : 0.000001
optimizer :  momentum_nesterov # adam/momentum
num_epochs :  100

save_every :  5000 # save model every k iterations
print_every :  50 # print stats every k iterations
eval_every :  100 # eval model every k iterations
num_classes :  46 # number of classes
len_eval_train :  20
len_eval_test :  2048

num_chan :  1 # num of channels
dim_h :  64
dim_w :  64

video_num_frames :  10 # number of frames of the input
used_num_frames :  10 # number of time steps received by the graph model

num_eval_spatial_clips :  1 # number of spatial crops for each video
num_eval_temporal_clips :  1 # number of temporal sampling for each video

dataset : mnist # smt-smt/mnist
restore_dir : none
test_dataset : './datasets/digits_sync_split_test_sync_dist_-1_num_classes_46_no_digits_5_no_noise_parts_0'
train_dataset : './datasets/digits_sync_split_train_sync_dist_-1_num_classes_46_no_digits_5_no_noise_parts_0'

gt_test_file : none
gt_train_file : none

backbone_model : simple_c2d # type of model resnet_2d/i3d/non-local
place_graph :  final # where to place the graph: res2 / res3 / res5 / final / res2-res3-final
place_nonlocal : none # where to place the graph: res2 / res3 / res5 / final / res2-res3-final

# backbone params
num_filters :  512 # number of conv filters in SimpleConvModel
classification_dropout :  0.0 # dropout in the classification layer
# final_norm : LN # type of normalisation used after the graph: None / BN / LN 

# graph model params

num_process_iter :  3
num_scales :  3

use_norm : none # type of normalisation: None / BN / LN 
node_feat_dim :  512
message_dims :  512

use_att : simple # none / simple / dot 
scalewise_update :  False # use a different update function for each scale

comb_type :  serial # agregation type between backbone features and graph output: serial / plus
use_positional_emb :  True  # use gaussian map for location embedding: True or False
dim_map :  6 # use a dim_map x dim_map map as positional embedding

update_layers :  2 # number of layers in spatial update MLP
multihead_att :  False # multi or one head attention






